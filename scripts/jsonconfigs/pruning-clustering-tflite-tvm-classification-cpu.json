{
    "model_wrapper":
    {
        "type": "kenning.modelwrappers.classification.tensorflow_pet_dataset.TensorFlowPetDatasetMobileNetV2",
        "parameters":
        {
            "model_path": "kenning:///models/classification/tensorflow_pet_dataset_mobilenetv2.h5"
        }
    },
    "dataset":
    {
        "type": "kenning.datasets.pet_dataset.PetDataset",
        "parameters":
        {
            "dataset_root": "./build/PetDataset"
        }
    },
    "optimizers":
    [
        {
            "type": "kenning.optimizers.tensorflow_pruning.TensorFlowPruningOptimizer",
            "parameters":
            {
                "compiled_model_path": "./build/pruned.h5",
                "target_sparsity": 0.15,
                "batch_size": 128,
                "epochs": 5
            }
        },
        {
            "type": "kenning.optimizers.tensorflow_clustering.TensorFlowClusteringOptimizer",
            "parameters":
            {
                "compiled_model_path": "./build/clustered.h5",
                "cluster_dense": false,
                "preserve_sparsity": true
            }
        },
        {
            "type": "kenning.optimizers.tflite.TFLiteCompiler",
            "parameters":
            {
                "target": "int8",
                "compiled_model_path": "./build/quantized.tflite",
                "inference_input_type": "int8",
                "inference_output_type": "int8"
            }
        },
        {
            "type": "kenning.optimizers.tvm.TVMCompiler",
            "parameters": {
                "model_framework": "onnx",
                "target": "llvm -mcpu=core-avx2",
                "target_host": null,
                "opt_level": 3,
                "libdarknet_path": "/usr/local/lib/libdarknet.so",
                "compile_use_vm": false,
                "output_conversion_function": "default",
                "compiled_model_path": "./build/compiled_model.tar"
            }
        }
    ],
    "runtime":
    {
        "type": "kenning.runtimes.tvm.TVMRuntime",
        "parameters":
        {
            "save_model_path": "./build/compiled_model.tar"
        }
    }
}
