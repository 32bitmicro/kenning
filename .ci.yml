image: $CI_IMAGE

variables:
    GIT_STRATEGY: clone
    GIT_SUBMODULE_STRATEGY: recursive

stages:
    - lint
    - tests
    - docs

flake8:
    stage: lint
    script:
        - flake8 .
    allow_failure: false

pytest:
    stage: tests
    script:
        - PYTHONPATH=$(pwd):$PYTHONPATH pytest -rs kenning
    allow_failure: false

onnx-conversions:
    stage: tests
    script:
        - ln /usr/bin/python3 /usr/bin/python
        - ./scripts/onnxconversions.sh
        - mkdir -p docs/source/generated
        - cp build/onnx-support.md docs/source/generated/onnx-support.md
    artifacts:
        paths:
            - docs/source/generated
    allow_failure: false

sample-compilation:
    stage: tests
    script:
        - ln /usr/bin/python3 /usr/bin/python
        - mkdir build
        - ln -s /pet-dataset build/pet-dataset
        - sed -i '/download-dataset/d' ./scripts/tvm-tensorflow-classification-cpu.sh
        - ./scripts/tvm-tensorflow-classification-cpu.sh
    artifacts:
        paths:
            - build/local-cpu-tvm-tensorflow-classification.json
            - docs/source/generated
    allow_failure: false

sample-pipeline-optimization:
    stage: tests
    script:
        - ln /usr/bin/python3 /usr/bin/python
        - mkdir build
        - ln -s /pet-dataset build/pet-dataset
        - ./scripts/optimization-tflite-tvm-tensorflow-pet-dataset.sh
    artifacts:
        paths:
            - build/
    allow_failure: false

docs:
    stage: docs
    tags:
        - docs
    variables:
        DOCS_DIR: './docs'
    script:
        - cd $DOCS_DIR
        - make SPHINXOPTS="-A commit=$CI_BUILD_REF -A branch=$CI_BUILD_REF_NAME" html
        - tar cf $CI_DOCS_ARCHIVE -C build/html/ .
    artifacts:
        paths:
            - $DOCS_DIR/build/html
            - $CI_DOCS_ARCHIVE
    allow_failure: false
