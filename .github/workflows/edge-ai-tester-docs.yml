name: Edge AI Tester docs

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  onnxconversion:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.5
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc g++ build-essential cmake llvm protobuf-compiler libprotoc-dev
          python -m pip install --upgrade pip==21.0.1 setuptools
          python -m pip install --upgrade numpy matplotlib tensorflow==2.4.1 tensorflow-addons tf-models-official==2.4.0
          python -m pip install --upgrade git+https://github.com/onnx/tensorflow-onnx.git
          python -m pip install --upgrade git+https://github.com/onnx/onnx-tensorflow.git
          python -m pip install --upgrade torch==1.8.1+cpu torchvision==0.9.1+cpu torchaudio==0.8.1 -f https://download.pytorch.org/whl/torch_stable.html
          python -m pip install --upgrade mxnet gluoncv
          python -m pip install --upgrade jinja2
      - name: Run ONNX conversion tests
        run: |
          ./scripts/onnxconversions.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: onnxconversion
          path: build/onnx-support.rst

  docs-generation:
    runs-on: ubuntu-latest
    needs: [onnxconversion]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8.5
      - name: Install dependencies
        run: |
          python -m pip install --upgrade sphinx
          python -m pip install git+https://github.com/antmicro/sphinx_antmicro_theme.git
      - name: Generate documentation
        run: |
          mkdir -p docs/source/generated
          find .
          cp onnxconversion/onnx-support.rst docs/source/generated/onnx-support.rst
          cd docs
          make html
      - uses: actions/upload-artifact@v2
        with: 
          name: gh-page
          path: docs/build/html
      - name: Deploy to Github Pages
        if: github.event_name == 'push'
        run: |
          cd docs/build/html
          touch .nojekyll
          git init
          cp ../../../.git/config ./.git/config
          git add .
          git config --local user.email "push@gha"
          git config --local user.name "GHA"
          git commit -am "update ${{ github.sha }}"
          git push -u origin +HEAD:gh-pages
          rm -rf .git
