name: Edge AI Tester docs

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  onnxconversion:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.5
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc g++ build-essential cmake llvm protobuf-compiler libprotoc-dev
          python -m pip install --upgrade pip==21.0.1 setuptools
          python -m pip install --upgrade matplotlib tensorflow==2.5.0 tensorflow-addons tf-models-official==2.5.0
          python -m pip install --upgrade git+https://github.com/onnx/tensorflow-onnx.git
          python -m pip install --upgrade git+https://github.com/onnx/onnx-tensorflow.git
          python -m pip install --upgrade torch==1.8.1+cpu torchvision==0.9.1+cpu torchaudio==0.8.1 -f https://download.pytorch.org/whl/torch_stable.html
          python -m pip install --upgrade mxnet gluoncv
          python -m pip install --upgrade jinja2
          python -m pip install --upgrade numpy
      - name: Run ONNX conversion tests
        run: |
          ./scripts/onnxconversions.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: onnxconversion
          path: build/onnx-support.rst

  inference-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Checkout LFS objects
        run: git lfs checkout
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.5
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
             gcc g++ build-essential cmake llvm protobuf-compiler \
             libprotoc-dev libtinfo-dev zlib1g-dev libedit-dev libxml2-dev \
             llvm curl wget
          python -m pip install --upgrade pip==21.0.1 setuptools
          python -m pip install --upgrade tensorflow==2.5.0 tensorflow-addons tf-models-official==2.5.0
          python -m pip install --upgrade git+https://github.com/onnx/tensorflow-onnx.git
          python -m pip install --upgrade git+https://github.com/onnx/onnx-tensorflow.git
          python -m pip install --upgrade onnx
          python -m pip install --upgrade numpy
      - name: Install TVM
        run: |
          git clone https://github.com/apache/tvm tvm
          cd tvm
          git checkout 83baec3
          git submodule update --init --recursive
          mkdir build
          cp cmake/config.cmake build/config.cmake
          sed -i 's/set(USE_LLVM OFF)/set(USE_LLVM ON)/g' build/config.cmake
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local ..
          make -j`nproc`
          sudo make install
          cd ..
          python -m pip install -e python/
      - name: Run sample compilation and inference
        run: |
          ./scripts/tvm-tensorflow-classification-cpu.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: inferencetest
          path: build/local-cpu-tvm-tensorflow-classification.json

  docs-generation:
    runs-on: ubuntu-latest
    needs: [onnxconversion,inference-test]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8.5
      - name: Install dependencies
        run: |
          python -m pip install --upgrade sphinx matplotlib numpy importlib-resources tqdm
          python -m pip install --upgrade onnx Jinja2 tqdm psutil scikit_learn
          python -m pip install git+https://github.com/antmicro/sphinx_antmicro_theme.git
          python -m pip install sphinxcontrib-napoleon
      - name: Generate documentation
        run: |
          mkdir -p docs/source/generated
          find .
          cp onnxconversion/onnx-support.rst docs/source/generated/onnx-support.rst
          python -m kenning.scenarios.render_report \
            inferencetest/local-cpu-tvm-tensorflow-classification.json \
            "Pet Dataset classification using TVM-compiled TensorFlow model" \
            docs/source/generated/local-cpu-tvm-tensorflow-classification.rst \
            --img-dir docs/source/generated/img \
            --report-types performance classification \
            --root-dir docs/source/
          cd docs
          make html
      - uses: actions/upload-artifact@v2
        with: 
          name: gh-page
          path: docs/build/html
      - name: Deploy to Github Pages
        if: github.event_name == 'push'
        run: |
          cd docs/build/html
          touch .nojekyll
          git init
          cp ../../../.git/config ./.git/config
          git add .
          git config --local user.email "push@gha"
          git config --local user.name "GHA"
          git commit -am "update ${{ github.sha }}"
          git push -u origin +HEAD:gh-pages
          rm -rf .git
